package com.quanlythuvien.servlet;

import com.quanlythuvien.dao.PhieuMuonDAO;
import com.quanlythuvien.model.SinhVien;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.io.PrintWriter;

/**
 * Servlet x·ª≠ l√Ω m∆∞·ª£n s√°ch
 * URL: /student/borrowBook
 */
@WebServlet(name = "BorrowBookServlet", urlPatterns = {"/student/borrowBook"})
public class BorrowBookServlet extends HttpServlet {

    private PhieuMuonDAO phieuMuonDAO;

    @Override
    public void init() throws ServletException {
        phieuMuonDAO = new PhieuMuonDAO();
        System.out.println("========================================");
        System.out.println("‚úÖ BorrowBookServlet INITIALIZED!");
        System.out.println("üìç URL Pattern: /student/borrowBook");
        System.out.println("========================================");
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        System.out.println("üîî BorrowBookServlet.doPost() called!");

        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");

        PrintWriter out = response.getWriter();

        try {
            // L·∫•y th√¥ng tin sinh vi√™n t·ª´ session
            HttpSession session = request.getSession(false);
            Integer maSV = null;

            System.out.println("üìå Checking session...");

            if (session != null) {
                System.out.println("‚úì Session exists: " + session.getId());

                maSV = (Integer) session.getAttribute("loggedInMaSV");
                System.out.println("  - loggedInMaSV: " + maSV);

                if (maSV == null) {
                    SinhVien sinhVien = (SinhVien) session.getAttribute("loggedInStudent");
                    System.out.println("  - loggedInStudent: " + sinhVien);

                    if (sinhVien != null) {
                        maSV = sinhVien.getMaSV();
                        System.out.println("  - Got maSV from object: " + maSV);
                    }
                }
            } else {
                System.out.println("‚úó Session is NULL!");
            }

            // Ki·ªÉm tra ƒëƒÉng nh·∫≠p
            if (maSV == null) {
                System.out.println("‚ùå Not logged in!");
                out.print("{\"success\": false, \"message\": \"Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ m∆∞·ª£n s√°ch\"}");
                return;
            }

            System.out.println("‚úì Student ID: " + maSV);

            // L·∫•y m√£ s√°ch t·ª´ request
            String bookIdStr = request.getParameter("bookId");
            System.out.println("üìñ Book ID parameter: " + bookIdStr);

            if (bookIdStr == null || bookIdStr.isEmpty()) {
                System.out.println("‚ùå Missing bookId!");
                out.print("{\"success\": false, \"message\": \"Kh√¥ng t√¨m th·∫•y th√¥ng tin s√°ch\"}");
                return;
            }

            int maSach = Integer.parseInt(bookIdStr);
            System.out.println("‚úì Parsed Book ID: " + maSach);

            // Ki·ªÉm tra sinh vi√™n c√≥ ƒëang m∆∞·ª£n qu√° s·ªë l∆∞·ª£ng cho ph√©p kh√¥ng
            int sachDangMuon = phieuMuonDAO.countSachDangMuon(maSV);
            System.out.println("üìä Current borrowed books: " + sachDangMuon);

            int MAX_BOOKS = 5; // Gi·ªõi h·∫°n s·ªë s√°ch ƒë∆∞·ª£c m∆∞·ª£n c√πng l√∫c

            if (sachDangMuon >= MAX_BOOKS) {
                System.out.println("‚ùå Reached max limit!");
                out.print("{\"success\": false, \"message\": \"B·∫°n ƒë√£ m∆∞·ª£n t·ªëi ƒëa " + MAX_BOOKS + " s√°ch. Vui l√≤ng tr·∫£ s√°ch tr∆∞·ªõc khi m∆∞·ª£n th√™m.\"}");
                return;
            }

            // Ki·ªÉm tra sinh vi√™n c√≥ s√°ch qu√° h·∫°n kh√¥ng
            int sachQuaHan = phieuMuonDAO.countSachQuaHan(maSV);
            System.out.println("‚è∞ Overdue books: " + sachQuaHan);

            if (sachQuaHan > 0) {
                System.out.println("‚ùå Has overdue books!");
                out.print("{\"success\": false, \"message\": \"B·∫°n c√≥ " + sachQuaHan + " s√°ch qu√° h·∫°n. Vui l√≤ng tr·∫£ s√°ch tr∆∞·ªõc khi m∆∞·ª£n th√™m.\"}");
                return;
            }

            // Ki·ªÉm tra s√°ch ƒë√£ ƒë∆∞·ª£c m∆∞·ª£n b·ªüi sinh vi√™n n√†y ch∆∞a (ƒëang m∆∞·ª£n)
            boolean daMuon = phieuMuonDAO.kiemTraSachDaMuon(maSV, maSach);
            System.out.println("üîç Already borrowed: " + daMuon);

            if (daMuon) {
                System.out.println("‚ùå Already borrowed this book!");
                out.print("{\"success\": false, \"message\": \"B·∫°n ƒë√£ m∆∞·ª£n s√°ch n√†y r·ªìi. Vui l√≤ng tr·∫£ s√°ch tr∆∞·ªõc khi m∆∞·ª£n l·∫°i.\"}");
                return;
            }

            // T·∫°o phi·∫øu m∆∞·ª£n m·ªõi
            System.out.println("üíæ Creating borrow record...");
            boolean success = phieuMuonDAO.taoPhieuMuon(maSV, maSach);

            if (success) {
                System.out.println("‚úÖ Borrow successful!");
                out.print("{\"success\": true, \"message\": \"M∆∞·ª£n s√°ch th√†nh c√¥ng!\"}");
            } else {
                System.out.println("‚ùå Failed to create borrow record!");
                out.print("{\"success\": false, \"message\": \"Kh√¥ng th·ªÉ t·∫°o phi·∫øu m∆∞·ª£n. Vui l√≤ng th·ª≠ l·∫°i sau.\"}");
            }

        } catch (NumberFormatException e) {
            System.out.println("‚ùå Invalid number format: " + e.getMessage());
            out.print("{\"success\": false, \"message\": \"D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá\"}");
            e.printStackTrace();
        } catch (Exception e) {
            System.out.println("‚ùå Exception: " + e.getMessage());
            out.print("{\"success\": false, \"message\": \"L·ªói h·ªá th·ªëng: " + e.getMessage() + "\"}");
            e.printStackTrace();
        } finally {
            out.flush();
            System.out.println("========================================\n");
        }
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        System.out.println("‚ö†Ô∏è BorrowBookServlet: GET method not allowed!");
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        response.setStatus(HttpServletResponse.SC_METHOD_NOT_ALLOWED);

        PrintWriter out = response.getWriter();
        out.print("{\"success\": false, \"message\": \"GET method is not supported. Use POST instead.\"}");
        out.flush();
    }
}